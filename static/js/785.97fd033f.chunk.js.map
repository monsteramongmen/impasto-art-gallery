{"version":3,"file":"static/js/785.97fd033f.chunk.js","mappings":"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","sources":["webpack://impasto-art-studio/./src/content/ongoing-prohects/head.module.css?5078","content/ongoing-prohects/index.tsx","../node_modules/react-simple-image-viewer/node_modules/style-inject/dist/style-inject.es.js","../node_modules/react-simple-image-viewer/src/ReactSimpleImageViewer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"head_card__5reWJ\",\"insidecardbox\":\"head_insidecardbox__vn+hk\",\"insidecard\":\"head_insidecard__i1NBI\",\"cardname\":\"head_cardname__YrZR2\"};","import { Box } from '@mui/system'\r\nimport React from 'react'\r\nimport ImageList from './../../ImageData.json'\r\nimport Classes from './head.module.css'\r\nimport { Typography } from '@mui/material'\r\n// import ImageListDialog from './ImageDialog'\r\nimport ImageViewer from \"react-simple-image-viewer\"\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { ArtGalleryActions } from '../../slice/artgallery'\r\n// import { RootState } from '../../store'\r\n\r\nconst Head = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isViewerOpen, setIsViewerOpen] = React.useState(false);\r\n    // const { modalImagesList } = useSelector((state: RootState) => state.artGallery)\r\n    const [convertedImg, setConvertedImg] = React.useState<string[]>([]);\r\n\r\n\r\n    const openModalHandler = (row: any) => {\r\n        row?.media.forEach((data: any) => {\r\n            setConvertedImg((prev) => [...prev, process.env.PUBLIC_URL + data]);\r\n        })\r\n        dispatch(ArtGalleryActions.modalImagesList(row))\r\n        dispatch(ArtGalleryActions.openGalleryModal(true))\r\n        setTimeout(() => {\r\n            setIsViewerOpen(true);\r\n        }, 100);\r\n    }\r\n\r\n    // React.useEffect(() => {\r\n    //     if (modalImagesList?.media?.length) {\r\n    //         modalImagesList?.media.forEach((data: any) => {\r\n    //             setConvertedImg((prev) => [...prev, process.env.PUBLIC_URL + data]);\r\n    //         })\r\n    //     } else {\r\n    //         return;\r\n    //     }\r\n    // }, [modalImagesList?.media]);\r\n\r\n    const closeImageViewer = () => {\r\n        setIsViewerOpen(false);\r\n        dispatch(ArtGalleryActions.modalImagesList({}))\r\n        setConvertedImg([]);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ width: \"90%\", height: \"auto\", margin: \"4rem auto\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", rowGap: \"35px\", columnGap: \"30px\", flexWrap: \"wrap\", flexDirection: \"column\" }}>\r\n                <Typography sx={{ fontSize: \"28px\", fontWeight: \"600\" }}>Ongoing Projects</Typography>\r\n            </Box>\r\n            <Box sx={{ width: \"90%\", height: \"auto\", margin: \"4rem auto\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", rowGap: \"35px\", columnGap: \"30px\", flexWrap: \"wrap\" }}>\r\n\r\n                {ImageList.filter((data) => data?.type === \"ongoing\").reverse().map((row) => {\r\n                    return <Box\r\n                        className={Classes.card}\r\n                        key={row.id} sx={{\r\n                            width: \"250px\", height: \"300px\",\r\n                            boxShadow: \"rgba(100, 100, 111, 0.2) 0px 7px 29px 0px\",\r\n                            borderRadius: \"6px\", display: \"flex\", alignItems: \"cener\", justifyContent: \"center\"\r\n                        }}>\r\n\r\n                        <Box key={row.id} sx={{\r\n                            width: \"98%\", height: \"98%\",\r\n                            background: `url(${process.env.PUBLIC_URL + row?.media[0]}) no-repeat center center/cover`,\r\n                            margin: \"auto\", borderRadius: \"6px\", cursor: \"pointer\"\r\n                        }}>\r\n                            <Typography onClick={() => openModalHandler(row)} align='center' variant='h5' className={Classes.cardname}>Mangalore</Typography>\r\n\r\n                            <Box className={Classes.insidecardbox} sx={{\r\n                                width: \"100%\", height: \"100%\",\r\n                            }} >\r\n                                {/* <img className={Classes.insidecard} src={row?.url} height=\"100%\" width=\"100%\" alt={row?.name} /> */}\r\n                                <Box className={Classes.insidecard} sx={{\r\n                                    width: \"98%\", height: \"98%\",\r\n                                    background: `url(${process.env.PUBLIC_URL + row?.media[0]}) no-repeat center center/cover`,\r\n                                    margin: \"auto\", borderRadius: \"6px\", cursor: \"pointer\"\r\n                                }} ></Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                })}\r\n                {/* <ImageListDialog /> */}\r\n                {isViewerOpen && (\r\n                    <ImageViewer\r\n                        src={convertedImg}\r\n                        // currentIndex={currentImage}\r\n                        onClose={closeImageViewer}\r\n                        disableScroll={false}\r\n                        backgroundStyle={{\r\n                            backgroundColor: \"rgba(0,0,0,0.9)\",\r\n                            zIndex: 700\r\n                        }}\r\n                        closeOnClickOutside={true}\r\n                    />\r\n                )}\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Head","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React, { CSSProperties, useCallback, useEffect, useState } from \"react\";\nimport styles from \"./styles.module.css\";\n\ninterface IProps {\n  src: string[];\n  currentIndex?: number;\n  backgroundStyle?: CSSProperties;\n  disableScroll?: boolean;\n  closeOnClickOutside?: boolean;\n  onClose?: () => void;\n  closeComponent?: JSX.Element;\n  leftArrowComponent?: JSX.Element;\n  rightArrowComponent?: JSX.Element;\n}\n\nconst ReactSimpleImageViewer = (props: IProps) => {\n  const [currentIndex, setCurrentIndex] = useState(props.currentIndex ?? 0);\n\n  const changeImage = useCallback(\n    (delta: number) => {\n      let nextIndex = (currentIndex + delta) % props.src.length;\n      if (nextIndex < 0) nextIndex = props.src.length - 1;\n      setCurrentIndex(nextIndex);\n    },\n    [currentIndex]\n  );\n\n  const handleClick = useCallback(\n    (event: any) => {\n      if (!event.target || !props.closeOnClickOutside) {\n        return;\n      }\n\n      const checkId = event.target.id === 'ReactSimpleImageViewer';\n      const checkClass = event.target.classList.contains('react-simple-image-viewer__slide');\n\n      if (checkId || checkClass) {\n        event.stopPropagation();\n        props.onClose?.();\n      }\n    },\n    [props.onClose]\n  );\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === \"Escape\") {\n        props.onClose?.();\n      }\n\n      if ([\"ArrowLeft\", \"h\"].includes(event.key)) {\n        changeImage(-1);\n      }\n\n      if ([\"ArrowRight\", \"l\"].includes(event.key)) {\n        changeImage(1);\n      }\n    },\n    [props.onClose, changeImage]\n  );\n\n  const handleWheel = useCallback(\n    (event: any) => {\n      if (event.wheelDeltaY > 0) {\n        changeImage(-1);\n      } else {\n        changeImage(1);\n      }\n    },\n    [changeImage]\n  );\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    if (!props.disableScroll) {\n      document.addEventListener(\"wheel\", handleWheel);\n    }\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n\n      if (!props.disableScroll) {\n        document.removeEventListener(\"wheel\", handleWheel);\n      }\n    };\n  }, [handleKeyDown, handleWheel]);\n\n  return (\n    <div\n      id=\"ReactSimpleImageViewer\"\n      className={`${styles.wrapper} react-simple-image-viewer__modal`}\n      onKeyDown={handleKeyDown}\n      onClick={handleClick}\n      style={props.backgroundStyle}\n    >\n      <span\n        className={`${styles.close} react-simple-image-viewer__close`}\n        onClick={() => props.onClose?.()}\n      >\n        { props.closeComponent || \"×\" }\n      </span>\n\n      {props.src.length > 1 && (\n        <span\n          className={`${styles.navigation} ${styles.prev} react-simple-image-viewer__previous`}\n          onClick={() => changeImage(-1)}\n        >\n          { props.leftArrowComponent || \"❮\" }\n        </span>\n      )}\n\n      {props.src.length > 1 && (\n        <span\n          className={`${styles.navigation} ${styles.next} react-simple-image-viewer__next`}\n          onClick={() => changeImage(1)}\n        >\n          { props.rightArrowComponent || \"❯\" }\n        </span>\n      )}\n\n      <div\n        className={`${styles.content} react-simple-image-viewer__modal-content`}\n        onClick={handleClick}\n      >\n        <div className={`${styles.slide} react-simple-image-viewer__slide`}>\n          <img className={styles.image} src={props.src[currentIndex]} alt=\"\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReactSimpleImageViewer;\n"],"names":["dispatch","useDispatch","React","isViewerOpen","setIsViewerOpen","convertedImg","setConvertedImg","Box","sx","width","height","margin","display","alignItems","justifyContent","rowGap","columnGap","flexWrap","flexDirection","Typography","fontSize","fontWeight","ImageList","data","type","reverse","map","row","className","Classes","boxShadow","borderRadius","background","process","media","cursor","onClick","forEach","prev","ArtGalleryActions","setTimeout","openModalHandler","align","variant","id","src","onClose","disableScroll","backgroundStyle","backgroundColor","zIndex","closeOnClickOutside","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ReactSimpleImageViewer","props","useState","currentIndex","setCurrentIndex","changeImage","useCallback","delta","nextIndex","length","handleClick","event","target","checkId","checkClass","classList","contains","stopPropagation","handleKeyDown","key","includes","handleWheel","wheelDeltaY","useEffect","addEventListener","removeEventListener","styles","onKeyDown","closeComponent","leftArrowComponent","rightArrowComponent","alt"],"sourceRoot":""}